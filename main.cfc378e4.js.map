{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","newMessage","document","createElement","classList","add","textContent","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,GAClBH,EAAQI,iBAAiBH,EAAW,WAClCE,EAAkBF,UAAAA,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQK,SACjDL,iBAAAA,OAAAA,EAAQM,SAKpB,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAaC,SAASC,cAAc,OAC1CF,EAAWG,UAAUC,IAAI,WACzBJ,EAAWK,YAAcN,EACzBE,SAASK,KAAKC,OAAOP,IAGvBQ,OAAOC,QAAU,CACfnB,QAAAA,EACAQ,aAAAA","file":"main.cfc378e4.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve) => {\n    element.addEventListener(eventName, () => {\n      resolve(`It was ${eventName} on the element: ${element.nodeName},\n      id: ${element.id}`);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const newMessage = document.createElement('div');\n  newMessage.classList.add('message');\n  newMessage.textContent = message;\n  document.body.append(newMessage);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}